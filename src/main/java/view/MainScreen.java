package view;

import controller.ProjectController;
import controller.TaskController;
import java.awt.Color;
import java.awt.Font;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.text.Format;
import java.util.List;
import java.util.Map;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import model.ProjectModel;
import model.TaskModel;
import util.ButtonHandler;
import util.DeadlineHandler;
import util.TaskTableModel;

/**
 *
 * @author kelson
 */
public class MainScreen extends javax.swing.JFrame {

    ProjectController projectController;
    TaskController taskController;
    
    // carregar dados nas listas
    // o model é responsavel pela construcao visual do app
    // ao carregar os projetos será guardado aqui
    // OBS default é immplementação padrao do java
    DefaultListModel projectsModel;
    TaskTableModel taskModel;
    
    public MainScreen() {
        
        initComponents();
        
        // metodo só para inicialização dos controllers só para nao poluir o principal
        initDataController();
        
        initComponentsModel();
        
        // decorate table task fica por ultimo para assumir o controle das celulas
        decorateTableTask();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPanelTasksList = new javax.swing.JScrollPane();
        jTableTasksList = new javax.swing.JTable();
        jPanelTasksList = new javax.swing.JPanel();
        jPanelTasksEmpty = new javax.swing.JPanel();
        jLabelTasksEmptyIcon = new javax.swing.JLabel();
        jLabelTasksEmptyTitle = new javax.swing.JLabel();
        jLabelTasksEmptySubtitle = new javax.swing.JLabel();
        jPanelHeader = new javax.swing.JPanel();
        jLabelHeaderTitle = new javax.swing.JLabel();
        jLabelHeaderSubtitle = new javax.swing.JLabel();
        jPanelProjectsHeader = new javax.swing.JPanel();
        jLabelProjectsHeaderTitle = new javax.swing.JLabel();
        ProjectsHeaderAdd = new javax.swing.JLabel();
        jPanelTasksHeader = new javax.swing.JPanel();
        jPanelTasksHeaderTitle = new javax.swing.JLabel();
        jPanelTasksHeaderAdd = new javax.swing.JLabel();
        jPanelProjectsList = new javax.swing.JPanel();
        jScrollPanelProjectsList = new javax.swing.JScrollPane();
        jListProjectsList = new javax.swing.JList<>();

        jTableTasksList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nome", "Descrição", "Prazo", "Concluído"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableTasksList.setGridColor(java.awt.Color.white);
        jTableTasksList.setRowHeight(50);
        jTableTasksList.setSelectionBackground(new java.awt.Color(204, 255, 204));
        jTableTasksList.setSelectionForeground(new java.awt.Color(0, 102, 0));
        jTableTasksList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTableTasksList.setShowHorizontalLines(true);
        jTableTasksList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableTasksListMouseClicked(evt);
            }
        });
        jScrollPanelTasksList.setViewportView(jTableTasksList);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(java.awt.Color.lightGray);
        setMinimumSize(new java.awt.Dimension(700, 800));
        setPreferredSize(new java.awt.Dimension(700, 800));

        jPanelTasksList.setBackground(java.awt.Color.white);
        jPanelTasksList.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanelTasksList.setLayout(new java.awt.BorderLayout());

        jPanelTasksEmpty.setBackground(java.awt.Color.white);

        jLabelTasksEmptyIcon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTasksEmptyIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/list5-100.png"))); // NOI18N
        jLabelTasksEmptyIcon.setToolTipText("");

        jLabelTasksEmptyTitle.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        jLabelTasksEmptyTitle.setForeground(new java.awt.Color(0, 153, 102));
        jLabelTasksEmptyTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTasksEmptyTitle.setText("Nenhuma tarefa adicionada");

        jLabelTasksEmptySubtitle.setFont(new java.awt.Font("Liberation Sans", 1, 13)); // NOI18N
        jLabelTasksEmptySubtitle.setForeground(new java.awt.Color(153, 153, 153));
        jLabelTasksEmptySubtitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTasksEmptySubtitle.setText("Clique no botão \"+\" para adicionar uma tarefa");

        javax.swing.GroupLayout jPanelTasksEmptyLayout = new javax.swing.GroupLayout(jPanelTasksEmpty);
        jPanelTasksEmpty.setLayout(jPanelTasksEmptyLayout);
        jPanelTasksEmptyLayout.setHorizontalGroup(
            jPanelTasksEmptyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabelTasksEmptyIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabelTasksEmptyTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabelTasksEmptySubtitle, javax.swing.GroupLayout.DEFAULT_SIZE, 464, Short.MAX_VALUE)
        );
        jPanelTasksEmptyLayout.setVerticalGroup(
            jPanelTasksEmptyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTasksEmptyLayout.createSequentialGroup()
                .addGap(153, 153, 153)
                .addComponent(jLabelTasksEmptyIcon)
                .addGap(18, 18, 18)
                .addComponent(jLabelTasksEmptyTitle)
                .addGap(18, 18, 18)
                .addComponent(jLabelTasksEmptySubtitle)
                .addContainerGap(236, Short.MAX_VALUE))
        );

        jPanelTasksList.add(jPanelTasksEmpty, java.awt.BorderLayout.CENTER);

        jPanelHeader.setBackground(new java.awt.Color(0, 153, 102));

        jLabelHeaderTitle.setFont(new java.awt.Font("Liberation Sans", 1, 36)); // NOI18N
        jLabelHeaderTitle.setForeground(new java.awt.Color(255, 255, 255));
        jLabelHeaderTitle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/check6-55.png"))); // NOI18N
        jLabelHeaderTitle.setText(" Todo App");

        jLabelHeaderSubtitle.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        jLabelHeaderSubtitle.setForeground(new java.awt.Color(255, 255, 255));
        jLabelHeaderSubtitle.setText("Anote tudo, não esqueça nada.");

        javax.swing.GroupLayout jPanelHeaderLayout = new javax.swing.GroupLayout(jPanelHeader);
        jPanelHeader.setLayout(jPanelHeaderLayout);
        jPanelHeaderLayout.setHorizontalGroup(
            jPanelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelHeaderLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabelHeaderTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelHeaderSubtitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelHeaderLayout.setVerticalGroup(
            jPanelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelHeaderLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jLabelHeaderTitle)
                .addGap(18, 18, 18)
                .addComponent(jLabelHeaderSubtitle)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        jPanelProjectsHeader.setBackground(java.awt.Color.white);
        jPanelProjectsHeader.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabelProjectsHeaderTitle.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        jLabelProjectsHeaderTitle.setForeground(new java.awt.Color(0, 153, 102));
        jLabelProjectsHeaderTitle.setText("Projetos");

        ProjectsHeaderAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/add5-30.png"))); // NOI18N
        ProjectsHeaderAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ProjectsHeaderAddMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanelProjectsHeaderLayout = new javax.swing.GroupLayout(jPanelProjectsHeader);
        jPanelProjectsHeader.setLayout(jPanelProjectsHeaderLayout);
        jPanelProjectsHeaderLayout.setHorizontalGroup(
            jPanelProjectsHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelProjectsHeaderLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabelProjectsHeaderTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ProjectsHeaderAdd)
                .addGap(14, 14, 14))
        );
        jPanelProjectsHeaderLayout.setVerticalGroup(
            jPanelProjectsHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabelProjectsHeaderTitle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(ProjectsHeaderAdd, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE)
        );

        jPanelTasksHeader.setBackground(java.awt.Color.white);
        jPanelTasksHeader.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanelTasksHeaderTitle.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        jPanelTasksHeaderTitle.setForeground(new java.awt.Color(0, 153, 102));
        jPanelTasksHeaderTitle.setText("Tarefas");

        jPanelTasksHeaderAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/add5-30.png"))); // NOI18N
        jPanelTasksHeaderAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanelTasksHeaderAddMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanelTasksHeaderLayout = new javax.swing.GroupLayout(jPanelTasksHeader);
        jPanelTasksHeader.setLayout(jPanelTasksHeaderLayout);
        jPanelTasksHeaderLayout.setHorizontalGroup(
            jPanelTasksHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTasksHeaderLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jPanelTasksHeaderTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanelTasksHeaderAdd)
                .addGap(22, 22, 22))
        );
        jPanelTasksHeaderLayout.setVerticalGroup(
            jPanelTasksHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelTasksHeaderTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanelTasksHeaderAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanelProjectsList.setBackground(java.awt.Color.white);
        jPanelProjectsList.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jListProjectsList.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        jListProjectsList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jListProjectsList.setFixedCellHeight(50);
        jListProjectsList.setSelectionBackground(new java.awt.Color(0, 153, 102));
        jListProjectsList.setSelectionForeground(new java.awt.Color(255, 255, 255));
        jListProjectsList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListProjectsListMouseClicked(evt);
            }
        });
        jScrollPanelProjectsList.setViewportView(jListProjectsList);

        javax.swing.GroupLayout jPanelProjectsListLayout = new javax.swing.GroupLayout(jPanelProjectsList);
        jPanelProjectsList.setLayout(jPanelProjectsListLayout);
        jPanelProjectsListLayout.setHorizontalGroup(
            jPanelProjectsListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelProjectsListLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jScrollPanelProjectsList, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );
        jPanelProjectsListLayout.setVerticalGroup(
            jPanelProjectsListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelProjectsListLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jScrollPanelProjectsList)
                .addGap(15, 15, 15))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelHeader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanelProjectsHeader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelProjectsList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelTasksHeader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelTasksList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanelHeader, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanelProjectsHeader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelTasksHeader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelTasksList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelProjectsList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ProjectsHeaderAddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProjectsHeaderAddMouseClicked
        // TODO add your handling code here:
        ProjectDialogScreen projectDialogScreen = new ProjectDialogScreen(this, rootPaneCheckingEnabled);
        projectDialogScreen.setVisible(true);        
        
        // ouvinte de janela, avisa quando for fechada
        projectDialogScreen.addWindowListener(new WindowAdapter() {
            public void windowClosed(WindowEvent e) {
                loadProjects();
            }
        });
    }//GEN-LAST:event_ProjectsHeaderAddMouseClicked

    private void jPanelTasksHeaderAddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelTasksHeaderAddMouseClicked
        // TODO add your handling code here:
        // cria uma nova tela de task
        TaskDialogScreen taskDialogScreen = new TaskDialogScreen(this, rootPaneCheckingEnabled);
        
        // seta o projeto a qual a tarefa pertence
        //taskDialogScreen.setProjectModel(null);
        // mostra a tela para o usuário
        int projectIndex = jListProjectsList.getSelectedIndex();
        ProjectModel project = (ProjectModel) projectsModel.get(projectIndex);
        taskDialogScreen.setProjectModel(project);
        taskDialogScreen.setVisible(true);
        
        // um listener para carregar as tarefas quando forem adicionadas
        taskDialogScreen.addWindowListener(new WindowAdapter() {
            public void windowClosed(WindowEvent e) {
                int projectIndex = jListProjectsList.getSelectedIndex();
                ProjectModel project = (ProjectModel) projectsModel.get(projectIndex);
                loadTasks(project.getId());
            }
        });
        
        // ouvinte de janela, avisa quando for fechada
//        taskDialogScreen.addWindowListener(new WindowAdapter() {
//            public void windowClosed(WindowEvent e) {
//                loadTasks();
//            }
//        });
    }//GEN-LAST:event_jPanelTasksHeaderAddMouseClicked

    public void EditTask(Object task) {                                                  
        TaskDialogScreen taskDialogScreen = new TaskDialogScreen(this, rootPaneCheckingEnabled);
        int projectIndex = jListProjectsList.getSelectedIndex();
        ProjectModel project = (ProjectModel) projectsModel.get(projectIndex);
        taskDialogScreen.setProjectModel(project);
        taskDialogScreen.setVisible(true);
        
        // um listener para carregar as tarefas quando forem adicionadas
        taskDialogScreen.addWindowListener(new WindowAdapter() {
            public void windowClosed(WindowEvent e) {
                int projectIndex = jListProjectsList.getSelectedIndex();
                ProjectModel project = (ProjectModel) projectsModel.get(projectIndex);
                loadTasks(project.getId());
            }
        });
    }
    
    private void jTableTasksListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableTasksListMouseClicked
        // TODO add your handling code here:
        // pega a linha da tarefa (row) a partir de um ponto na tela (point)
        int rowIndex = jTableTasksList.rowAtPoint(evt.getPoint());
        int columnIndex = jTableTasksList.columnAtPoint(evt.getPoint());
        
        TaskModel task = taskModel.getTasks().get(rowIndex);
        
        // para atualizar a lista
        int projectIndex = jListProjectsList.getSelectedIndex();
        ProjectModel project = (ProjectModel) projectsModel.get(projectIndex);
        
        switch(columnIndex) {
            case 3:
                taskController.update(task);
                break;
            case 4:
                EditTask(task);
                break;
            case 5:
                // apagar do banco
                taskController.delete(task.getId());
                // retirar dentro do task model
                taskModel.getTasks().remove(task);
                // atualizar lista
                loadTasks(project.getId());
                break;
        }
    }//GEN-LAST:event_jTableTasksListMouseClicked

    private void jListProjectsListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListProjectsListMouseClicked
        // TODO add your handling code here:
        int projectIndex = jListProjectsList.getSelectedIndex();
        ProjectModel project = (ProjectModel) projectsModel.get(projectIndex);
        loadTasks(project.getId());
//        JOptionPane.showMessageDialog(rootPane, project.getId());
    }//GEN-LAST:event_jListProjectsListMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Java swing".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainScreen().setVisible(true);
            }
        });
    }

    public void decorateTableTask() {
        jTableTasksList.getTableHeader().setFont(new Font("Liberation Sans", Font.BOLD, 14));
        jTableTasksList.getTableHeader().setBackground( new Color(0,153,102));
        jTableTasksList.getTableHeader().setForeground( new Color(255,255,255));
        jTableTasksList.setAutoCreateRowSorter(true);
        
        // pega a coluna 2 (deadline) e configura com o cell render que foi implementado (customizado)
        jTableTasksList.getColumnModel().getColumn(2).setCellRenderer(new DeadlineHandler());
        
        // adicionar botoes
        jTableTasksList.getColumnModel().getColumn(4).setCellRenderer(new ButtonHandler("edit5-25"));
        jTableTasksList.getColumnModel().getColumn(5).setCellRenderer(new ButtonHandler("delete5-25"));
    }
    
    public void initDataController() {
        // instanciar as duas variaveis controller criado no inicio
        projectController = new ProjectController();
        taskController = new TaskController();
        // o initDataController deve ser chamado no construtor
    }
    
    // instanciar os componentes do model
    public void initComponentsModel() {
        // inicia o projet model que vai cuidar da visualização
        projectsModel = new DefaultListModel();
        // carregar os dados do banco para a dentro do model
        loadProjects();
        
        // inicializa e carrega as tarefas
        taskModel = new TaskTableModel();
        jTableTasksList.setModel(taskModel);
//        loadTasks(8);

        
        if(!projectsModel.isEmpty()) {
//            jListProjectsList.setSelectedIndex(0);
//            ProjectModel project = (ProjectModel) projectsModel.get(0);
//            loadTasks(project.getId());
        }
    }
    
    public void loadProjects() {
        // pega todos os projetos
        List<ProjectModel> projects = projectController.getAll();
        // limpa o project model em todo novo cadastro
        projectsModel.clear();
        // vai carregando cada projeto dentro do model
        for (int i = 0; i < projects.size(); i ++) {
            ProjectModel project = projects.get(i);
            projectsModel.addElement(project);
        }
        // vincular a lista com o componente visual
        jListProjectsList.setModel(projectsModel);
    }
    
    public void loadTasks(int idProject) {
        List<TaskModel> tasks = taskController.getAll(idProject);
        taskModel.setTasks(tasks);
        // mostra a table se a lista nao estiver vazia (se tiver tarefas)
        showJTableTasks(!tasks.isEmpty());        
    }
    
    private void showJTableTasks(boolean hasTasks) {
        if(hasTasks) {
            if(jPanelTasksEmpty.isVisible()) {
                jPanelTasksEmpty.setVisible(false);
                jPanelTasksList.remove(jPanelTasksEmpty);
            }
            
            jPanelTasksList.add(jScrollPanelTasksList);
            jScrollPanelTasksList.setVisible(true);
            jScrollPanelTasksList.setSize(jPanelTasksList.getWidth(), jPanelTasksList.getHeight());
        } else {
            if(jScrollPanelTasksList.isVisible()) {
                jScrollPanelTasksList.setVisible(false);
                jPanelTasksList.remove(jScrollPanelTasksList);
            }
            
            jPanelTasksList.add(jPanelTasksEmpty);
            jPanelTasksEmpty.setVisible(true);
            jPanelTasksEmpty.setSize(jPanelTasksList.getWidth(), jPanelTasksList.getHeight());
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ProjectsHeaderAdd;
    private javax.swing.JLabel jLabelHeaderSubtitle;
    private javax.swing.JLabel jLabelHeaderTitle;
    private javax.swing.JLabel jLabelProjectsHeaderTitle;
    private javax.swing.JLabel jLabelTasksEmptyIcon;
    private javax.swing.JLabel jLabelTasksEmptySubtitle;
    private javax.swing.JLabel jLabelTasksEmptyTitle;
    private javax.swing.JList<String> jListProjectsList;
    private javax.swing.JPanel jPanelHeader;
    private javax.swing.JPanel jPanelProjectsHeader;
    private javax.swing.JPanel jPanelProjectsList;
    private javax.swing.JPanel jPanelTasksEmpty;
    private javax.swing.JPanel jPanelTasksHeader;
    private javax.swing.JLabel jPanelTasksHeaderAdd;
    private javax.swing.JLabel jPanelTasksHeaderTitle;
    private javax.swing.JPanel jPanelTasksList;
    private javax.swing.JScrollPane jScrollPanelProjectsList;
    private javax.swing.JScrollPane jScrollPanelTasksList;
    private javax.swing.JTable jTableTasksList;
    // End of variables declaration//GEN-END:variables
}
